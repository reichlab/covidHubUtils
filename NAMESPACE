# Generated by roxygen2: do not edit by hand

export(aggregate_to_weekly)
export(align_forecasts)
export(calc_cramers_dist_equal_space)
export(calc_cramers_dist_one_model_pair)
export(calc_cramers_dist_unequal_space)
export(calc_forecast_week_end_date)
export(calc_submission_due_date)
export(calc_target_end_date)
export(calc_target_week_end_date)
export(date_to_datetime)
export(download_raw_nytimes)
export(download_raw_usafacts)
export(get_all_models)
export(get_model_designations)
export(get_model_metadata)
export(get_plot_forecast_data)
export(get_zoltar_project_url)
export(join_with_hub_locations)
export(load_forecast_files_repo)
export(load_forecasts)
export(load_forecasts_local_zoltar)
export(load_forecasts_repo)
export(load_forecasts_zoltar)
export(load_latest_forecasts)
export(load_latest_forecasts_repo)
export(load_latest_forecasts_zoltar)
export(load_truth)
export(name_to_fips)
export(pivot_forecasts_wider)
export(plot_forecast)
export(plot_forecasts)
export(preprocess_hospitalization)
export(preprocess_jhu)
export(preprocess_nytimes)
export(preprocess_truth_for_zoltar)
export(preprocess_usafacts)
export(preprocess_visualization_truth)
export(reformat_forecasts)
export(save_truth_for_zoltar)
export(score_forecasts)
export(setup_zoltar_connection)
importFrom(doParallel,registerDoParallel)
importFrom(dplyr,`%>%`)
importFrom(dplyr,any_of)
importFrom(dplyr,filter)
importFrom(dplyr,group_by)
importFrom(dplyr,mutate)
importFrom(dplyr,n)
importFrom(dplyr,rename)
importFrom(dplyr,summarize)
importFrom(dplyr,ungroup)
importFrom(foreach,"%dopar%")
importFrom(foreach,foreach)
importFrom(grDevices,dev.size)
importFrom(httr,GET)
importFrom(httr,content)
importFrom(httr,stop_for_status)
importFrom(jsonlite,write_json)
importFrom(lubridate,ceiling_date)
importFrom(parallel,makeCluster)
importFrom(parallel,stopCluster)
importFrom(purrr,map_dfr)
importFrom(readr,col_character)
importFrom(readr,col_date)
importFrom(readr,col_integer)
importFrom(readr,cols)
importFrom(readr,read_csv)
importFrom(readr,write_csv)
importFrom(scoringutils,score)
importFrom(scoringutils,summarise_scores)
importFrom(stringr,str_split_fixed)
importFrom(yaml,yaml.load)
